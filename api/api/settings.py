"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
import sys
from pathlib import Path
from celery.schedules import crontab


def get_from_env_or_file(var_name, default=None):
    file_var_name = '%s_FILE' % var_name
    path = os.environ.get(file_var_name)
    if path and os.path.isfile(path):
        with open(path, 'r') as f:
            return f.read()
    else:
        return os.environ.get(var_name, default)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_from_env_or_file(
    'DJANGO_SECRET_KEY',
    'django-insecure-8cbj*@yl)w6(=y%yksh_g1+*3maxm)tp8g7&g%gejj^v)+vi2h')

TEST = 'test' in sys.argv

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DJANGO_DEBUG', '').lower() in ('on', 'true', 'yes') and \
        not TEST

ALLOWED_HOSTS = [
    s.strip() for s in os.getenv(
        'DJANGO_ALLOWED_HOSTS', 'localhost,cesium.tv,.cesium.tv').split(',')
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.postgres',
    'django_extensions',
    'django_celery_beat',
    'djcelery_email',
    'django_media_fixtures',
    'drf_recaptcha',
    'mail_templated',
    'rest_framework',
    'rest_framework_filters',
    'corsheaders',
    'colorfield',
    'nacl_encrypted_fields',
    'rest',
]

DEBUG_TOOLBAR_PANELS = [
    'debug_toolbar.panels.history.HistoryPanel',
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    'debug_toolbar.panels.redirects.RedirectsPanel',
    'debug_toolbar.panels.profiling.ProfilingPanel',
]

if DEBUG:
    INSTALLED_APPS.insert(3, 'debug_toolbar')


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
if DEBUG:
    MIDDLEWARE.insert(3, 'whitenoise.middleware.WhiteNoiseMiddleware')
    MIDDLEWARE.insert(3, 'debug_toolbar.middleware.DebugToolbarMiddleware')


ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'


NACL_FIELDS_KEY = get_from_env_or_file(
    'DJANGO_NACL_FIELDS_KEY', b'GQ_3W_#y1sg5C^6BX^F%kQ4}r15U7Wgd8ZH|Ck<u')

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DJANGO_DB_PASSWORD = get_from_env_or_file('DJANGO_DB_PASSWORD', 'password')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': os.getenv('DJANGO_DB_HOST', 'db'),
        'NAME': os.getenv('DJANGO_DB_NAME', 'cesium'),
        'USER': os.getenv('DJANGO_DB_USER', 'user'),
        'PASSWORD': DJANGO_DB_PASSWORD,
    }
}


REDIS_HOST = os.getenv('DJANGO_REDIS_HOST', 'website-redis')
REDIS_PORT = int(os.getenv('DJANGO_REDIS_PORT', '6379'))


CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': f'redis://{REDIS_HOST}:{REDIS_PORT}/1',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = Path(BASE_DIR).joinpath('static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.getenv('DJANGO_MEDIA_ROOT', '/tmp')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'rest.User'
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

CSRF_COOKIE_DOMAIN = 'cesium.tv'
CSRF_TRUSTED_ORIGINS = ['http://*.cesium.tv:8000']
CSRF_COOKIE_SAMESITE = 'None'
CSRF_COOKIE_SECURE = not DEBUG
SESSION_COOKIE_SAMESITE = 'None'
SESSION_COOKIE_SECURE = not DEBUG

CELERY_BROKER_URL = os.environ.get(
    'CELERY_BROKER_URL', f'redis://{REDIS_HOST}:{REDIS_PORT}/0')
CELERY_RESULT_BACKEND = CELERY_BROKER_URL
CELERY_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_BEAT_SCHEDULER = os.environ.get(
    'CELERY_BEAT_SCHEDULER',
    'django_celery_beat.schedulers:DatabaseScheduler')
CELERY_COMMAND = (
    'celery', '-A', 'api', 'worker', '-l', 'info',
)
CELERY_AUTORELOAD = DEBUG
CELERY_ALWAYS_EAGER = TEST
CELERY_TIMEZONE = TIME_ZONE


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest.oauth.OAuth2Authentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 100,
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_filters.backends.RestFrameworkFilterBackend',
    ),
}

EMAIL_BACKEND = os.environ.get(
    'DJANGO_EMAIL_BACKEND', 'django.core.mail.backends.console.EmailBackend')

CELERY_EMAIL_BACKEND = 'django_mailjet.backends.MailjetBackend'
MAILJET_API_KEY = get_from_env_or_file('DJANGO_MAILJET_API_KEY', None)
MAILJET_API_SECRET = get_from_env_or_file('DJANGO_MAILJET_API_SECRET', None)
DEFAULT_FROM_EMAIL = 'admin@cesium.tv'

DRF_RECAPTCHA_TESTING = TEST
DRF_RECAPTCHA_SECRET_KEY = get_from_env_or_file(
    'DJANGO_RECAPTCHA_SECRET_KEY', None)

INTERNAL_IPS = [
    "127.0.0.1",
]

DEBUG_TOOLBAR_CONFIG = {
    "SHOW_TOOLBAR_CALLBACK": lambda request: True,
}

CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOWED_ORIGINS = os.getenv('DJANGO_ALLOWED_CORS_ORIGINS', '').split(',')

SITE_ID = 1

AUTHLIB_OAUTH2_PROVIDER = {
    'refresh_token_generator': True,
    'token_expires_in': {
        'authorization_code': 604800,                       # 1 week
        'refresh_token': 604800,                            # 1 week
        'urn:ietf:params:oauth:grant-type:device_code': 0,  # indefinite
        'password': 604800,                                 # 1 week
    }
}

MEDIA_FIXTURE_FOLDERNAME = 'media'
DJANGO_SCSS_PATH = os.getenv('DJANGO_SCSS_PATH')
DJANGO_CSS_MINIFY = not DEBUG

STRIPE_CLIENT_ID = os.getenv('DJANGO_STRIPE_CLIENT_ID')
STRIPE_PUBLISHABLE_KEY = os.getenv('DJANGO_STRIPE_PUBLISHABLE_KEY')
STRIPE_PRIVATE_KEY = os.getenv('DJANGO_STRIPE_PRIVATE_KEY')
